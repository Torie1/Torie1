package com.hotel;

import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Date;

@JsonTypeName("CabinReservation")
public class CabinReservation extends Reservation {
    private boolean hasFullKitchen;
    private boolean hasLoft;

    public CabinReservation() {
    }

    public CabinReservation(String accountNumber, String reservationNumber, String lodgingPhysicalAddress, String lodgingMailingAddress,
                            Date startDate, int numberOfNights, int numberOfBeds, int numberOfBedrooms, int numberOfBathrooms,
                            int lodgingSizeSqFt, boolean hasFullKitchen, boolean hasLoft) {
        super(accountNumber, reservationNumber, lodgingPhysicalAddress, lodgingMailingAddress, startDate, numberOfNights,
                numberOfBeds, numberOfBedrooms, numberOfBathrooms, lodgingSizeSqFt);
        this.hasFullKitchen = hasFullKitchen;
        this.hasLoft = hasLoft;
    }

    public boolean isHasFullKitchen() {
        return hasFullKitchen;
    }

    public void setHasFullKitchen(boolean hasFullKitchen) {
        this.hasFullKitchen = hasFullKitchen;
    }

    public boolean isHasLoft() {
        return hasLoft;
    }

    public void setHasLoft(boolean hasLoft) {
        this.hasLoft = hasLoft;
    }

    @Override
    public double calculatePricePerNight() {
        double basicPrice = 120.0;
        double lodgingSizeFee = getLodgingSizeSqFt() > 900 ? 15.0 : 0.0;
        double kitchenFee = hasFullKitchen ? 20.0 : 0.0;
        double bathroomFee = getNumberOfBathrooms() > 1 ? (getNumberOfBathrooms() - 1) * 5.0 : 0.0;
        return basicPrice + lodgingSizeFee + kitchenFee + bathroomFee;
    }

    @Override
    public double calculateTotalReservationPrice() {
        double pricePerNight = calculatePricePerNight();
        return pricePerNight * getNumberOfNights();
    }
}


